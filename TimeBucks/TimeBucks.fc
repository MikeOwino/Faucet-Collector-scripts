
using FaucetCollector.Captcha;
using FaucetCollector.Script;

using System;
using System.Linq;
//css_ref FaucetCollector.Utilities
public class TimeBucks : FaucetScript
{
    /// <summary>
    /// List of Settings that will be shown in the bot when selecting this Faucet in the bot.
    /// You can get the value the user entered with the methods: GetSetting("[Name of the FaucetSetting]"), GetBoolSetting and GetDateTimeSetting
    /// You can also create a new setting value using SetSetting("[Name you want to use]", "value")
    /// </summary>
    public override FaucetSettings Settings
    {
        get
        {
            return new FaucetSettings("https://timebucks.com/")
            {
                new FaucetSetting(){Name="User",Display="Email",Type=EditorType.TextBox,Required=true},
                new FaucetSetting(){Name="Pass",Display="Password",Type=EditorType.Password,Required=true},
                new FaucetSetting(){Name="Roll",Display="Claim Roll",Type=EditorType.CheckBox,Default=true},
                new FaucetSetting(){Name="Watch",Display="WathAvaible Videos",Type=EditorType.CheckBox,Default=true},
                new FaucetSetting(){Name="SlideShows",Display="SlideShows",Type=EditorType.CheckBox,Default=true},
                new FaucetSetting(){Name="NightFallNews",Display="NightFallNews",Type=EditorType.CheckBox,Default=true},
                new FaucetSetting(){Name="Clicks",Display="Clicks",Type=EditorType.CheckBox,Default=true},
                new FaucetSetting(){Name="TT",Display="Time to wait",Type=EditorType.Numeric,Default=60},

            };
        }
    }

    /// <summary>
    /// This method gets called when the faucet is enabled and the GO button is clicked
    /// </summary>
    public override void Start()
    {
        //Title that shows in the browser. Is used to identify and close popup windows
        Title = "Paid|To|Click|Earn";
        //After we did try to claim on the faucet we search for these elements to determine if it was a success or a fail
        SuccessXPath = "//*"; // //span[@id='counter2']
        FailXPath = "//*"; // //span[@id='Failed']

        //Let Faucet Collector start up everything
        base.Start();
    }




    public override bool IsLoggedIn()
    {
        //In here we can check for the presence of an element that is only present when you are logged in.
        //In this case we check for en element with the class "loggedIn"
        return ElementByXPath("//a[contains(@href,'action.php?action=logout')]") != null;
    }





    public override int DoLogin()
    {

        var StartLogin = ElementByXPath("//span[contains(@class,'btnLogin')]");
        if (IsVisible(StartLogin))
        {
            Click(StartLogin);
        }

        Wait(3);

        var UsernameBox = ElementByXPath("//input[@id='username_box']");
        if (!IsVisible(UsernameBox))
        {
            return Fail("Username Box isn't visible");
        }
        SetText(UsernameBox, GetSetting("User"));

        Wait(2);

        var PasswordBox = ElementByXPath("//input[@id='password_box']");
        if (!IsVisible(PasswordBox))
        {
            return Fail("Password Box isn't visible");
        }
        SetText(PasswordBox, GetPassword("Pass"));

        Wait(2);

        Recaptcha_Function(); //call

        Wait(4);

        var Button_Login = ElementByXPath("//input[@value='Log in Here']");
        if (!IsVisible(Button_Login))
        {
            return Fail("Login button not found");
        }
        Click(Button_Login);

        Wait(1);

        return base.DoLogin();
    }


    public override int DoSolveFaucet()
    {


        if (GetBoolSetting("Clicks"))
        {
            GoToUrl("https://timebucks.com/publishers/index.php?pg=earn&tab=view_content_ads");
            Wait(1, 2);
            var recaptchaContainer = ElementByXPath("//div[@class='g-recaptcha']");

            if (IsVisible(recaptchaContainer))
            {
                var result = DoSolveCaptcha();
                if (result > 0)
                {
                    return result;
                }
                RecaptchaUtility utility = new RecaptchaUtility(this);
                utility.DoSolve();
                Wait(2, 3);

            }
            var Ads = ElementsByXPath("//a[@class='btnClickAdd']").Where(ad => IsVisible(ad)).ToList();

            int AdsViewed = 0;
            while (Ads.Count > 0)
            {
                try
                {
                    CheckForPopupsEnabled = false;
                    Click(Ads[0], false);
                    Driver.SwitchTo().Window(Driver.WindowHandles[1]);

                    Wait(2);
                    Driver.SwitchTo().Window(Driver.WindowHandles[0]);
                    var title = Driver.Title;

                    int timer;
                    if (!int.TryParse(title, out timer))
                    {
                        timer = 60;
                    }
                    Driver.SwitchTo().Window(Driver.WindowHandles[1]);
                    Wait(timer + 2);

                }
                finally
                {
                    Driver.SwitchTo().Window(Driver.WindowHandles[0]);
                    CheckForPopupsEnabled = true;
                    CheckForPopups();
                    Ads = ElementsByXPath("//a[@class='btnClickAdd']").Where(ad => IsVisible(ad)).ToList();
                    AdsViewed++;
                }

            }
            Log("You have viewed " + AdsViewed.ToString() + " Ads");

        }



        //==========//
        //SlideShows//
        //==========//
        if (GetBoolSetting("SlideShows"))
        {

            Title = "Earn";
            GoToUrl("https://timebucks.com/publishers/index.php?pg=earn&tab=view_content_timecave_slideshows");

            Wait(6);

            var CheckAll = ElementByXPath("//input[@value='View']");
            if (IsVisible(CheckAll))
            {

                var TimeToWaitForBreak = DateTime.Now.AddSeconds(420); //420sec = 7min
                while (true)
                {

                    CheckForPopupsEnabled = false;

                    Title = "thetimecave.com";

                    var ViewButtons = ElementByXPath("//input[@value='View']");
                    if (IsVisible(ViewButtons))
                    {
                        Log("SlideShows - View button - start");
                        Click(ViewButtons);
                    }

                    Wait(7);

                    Driver.SwitchTo().Window(Driver.WindowHandles[1]);

                    Wait(); //Wait for NEXT button
                    Log("SlideShows - Wait for NEXT button");

                    var Next_VAR = ElementByXPath("//a[contains(text(),'Next')]");
                    if (IsVisible(Next_VAR))
                    {
                        Log("SlideShows - click NEXT");
                        Click(Next_VAR);
                    }

                    if (Driver.Url.Contains("https://timebucks.com/publishers/index.php?pg=earn&tab=view_content_timecave_slideshows"))
                    {
                        Log("SlideShows - break - end season - success");
                        ClaimSuccess(); //Marks the claim as a success
                        break; //break the wait loop
                    }

                    var Captcha_Check = ElementByXPath("//iframe[contains(@src,'google.com/recaptcha')]");
                    if (IsVisible(Captcha_Check))
                    {
                        Log("SlideShows - do recaptcha");
                        Recaptcha_Function(); //call
                    }

                    if (DateTime.Now > TimeToWaitForBreak) //if the time above 65 sec 
                    {
                        Log("SlideShows - break - TimeToWaitForBreak");
                        break; //break the wait loop
                    }

                } //end while

            } //end CheckAll

            Title = "Earn";
            CheckForPopupsEnabled = true; //enable
            CheckForPopups();    //call

        } //end SlideShows
          //==========//		


        //==========//
        //NightFallNews//
        //==========//
        if (GetBoolSetting("NightFallNews"))
        {

            Title = "Earn";
            GoToUrl("https://timebucks.com/publishers/index.php?pg=earn&tab=vote");

            Wait(6);

            var CheckAll = ElementByXPath("//input[contains(@value,'View Showshows')]");
            if (IsVisible(CheckAll))
            {

                var TimeToWaitForBreak = DateTime.Now.AddSeconds(420); //420sec = 7min
                while (true)
                {

                    CheckForPopupsEnabled = false;

                    Title = "nightfallnews.com";

                    var ViewButtons = ElementByXPath("//input[contains(@value,'View Showshows')]");
                    if (IsVisible(ViewButtons))
                    {
                        Log("NightFallNews - View button - start");
                        Click(ViewButtons);
                    }

                    Wait(7);

                    Driver.SwitchTo().Window(Driver.WindowHandles[1]);

                    Wait(); //Wait for NEXT button
                    Log("NightFallNews - Wait for NEXT button");

                    var Article_Click = ElementByXPath("//div[contains(@class,'click_checker')]//div[@class='col-md-4']");
                    if (IsVisible(Article_Click))
                    {
                        Log("NightFallNews - Click on Article");
                        Click(Article_Click);
                    }

                    var StartEndNewOne = ElementByXPath("//a[contains(text(),'START NEXT')]");
                    if (IsVisible(StartEndNewOne))
                    {
                        ClaimSuccess(); //Marks the claim as a success
                        Log("NightFallNews - END - success - start new one");
                        Click(StartEndNewOne);
                    }

                    var Time_check = ElementByXPath("//span[text()='10']");
                    if (IsVisible(Time_check))
                    {
                        Log("NightFallNews - click NEXT");
                        var Next_VAR = ElementByXPath("//button[contains(text(),'Next')]");
                        Click(Next_VAR);
                    }

                    if (Driver.Url.Contains("https://timebucks.com/publishers/index.php?pg=earn&tab=vote"))
                    {
                        Log("NightFallNews - break - end season - succeed");
                        break; //break the wait loop
                    }

                    var Captcha_Check = ElementByXPath("//iframe[contains(@src,'google.com/recaptcha')]");
                    if (IsVisible(Captcha_Check))
                    {
                        Log("NightFallNews - do recaptcha");
                        Recaptcha_Function(); //call
                    }

                    if (DateTime.Now > TimeToWaitForBreak) //if the time above 65 sec 
                    {
                        Log("NightFallNews - break - TimeToWaitForBreak");
                        break; //break the wait loop
                    }

                } //end while

            } //end CheckAll

            Title = "Earn";
            CheckForPopupsEnabled = true; //enable
            CheckForPopups();    //call

        } //end NightFallNews
          //==========//		


        //======//
        //Watch//
        //======//
        if (GetBoolSetting("Watch"))
        {
            Title = "Earn";
            GoToUrl("https://timebucks.com/publishers/index.php?pg=earn&tab=watch_video");

            Wait(4);

            var Watch = ElementsByXPath("//input[@value='Watch']");
            int n = 0;
            while (Watch.Count > n)
            {
                CheckForPopupsEnabled = false;
                Click(Watch[n], false);
                Driver.SwitchTo().Window(Driver.WindowHandles[1]);
                Wait(4);
                var Watch_ = ElementByXPath("//a[contains(@href,'check-watchVideo')]");
                if (IsVisible(Watch_))
                {
                    Click(Watch_);
                    Wait(5, 9);
                }
                else
                {
                    n++;
                }
                CheckForPopupsEnabled = true;
                CheckForPopups();
                Driver.SwitchTo().Window(Driver.WindowHandles[0]);
                Wait();

                if (!Driver.Url.Contains("https://timebucks.com/publishers/index.php?pg=earn&tab=watch_video"))
                {
                    GoToUrl("https://timebucks.com/publishers/index.php?pg=earn&tab=watch_video");
                }
                else
                {
                    Driver.Navigate().Refresh();
                    Wait(2);
                    if (!Driver.Url.Contains("https://timebucks.com/publishers/index.php?pg=earn&tab=watch_video"))
                    {
                        GoToUrl("https://timebucks.com/publishers/index.php?pg=earn&tab=watch_video");
                    }

                }
                Wait(4);

                Watch = ElementsByXPath("//input[@value='Watch']");
            }


        } //end Watch
          //==========//


        //==========//
        //ClaimRoll//
        //==========//
        if (GetBoolSetting("Roll"))
        {
            Title = "Earn";
            GoToUrl("https://timebucks.com/publishers/index.php?pg=earn&tab=catpcha_new");

            try
            {
                var iframe = ElementByXPath("//iframe[contains(@src,'captcha')]");
                Driver.SwitchTo().Frame(iframe);
                Wait();
                var result = DoSolveCaptcha();
                if (result > 0)
                {
                    return result;
                }



                var captchaSolvedBtn = ElementByXPath("//a[@class='btnCaptcha']//input[@class='gradient install-btn']");
                if (!IsVisible(captchaSolvedBtn))
                {
                    return Fail("Captcha solved btn not visible");
                }

                Click(captchaSolvedBtn);
                Wait(3, 4);
            }
            finally
            {
                Driver.SwitchTo().DefaultContent();
            }
        }//end ClaimRoll
         //==========//

        return GetWaitSetting();
    }

    public override bool SetHCaptchaResponse(string response)
    {
        try
        {
            ExecuteScript("$('.h-captcha').find('iframe').attr('data-hcaptcha-response','" + response + "');");

        }
        catch (Exception)
        {

        }

        return base.SetHCaptchaResponse(response);
    }

    public int Recaptcha_Function()
    {

        //DoSolveImageCaptcha
        var SolveMedia = ElementByXPath("//img[contains(@id,'adcopy-puzzle-image-image')]");
        if (IsVisible(SolveMedia))
        {
            Log("DO SolveMedia");
            var result_2 = DoSolveImageCaptcha(ElementByXPath("//img[contains(@id,'adcopy-puzzle-image-image')]"), ElementByXPath("//input[@name='adcopy_response']"));
        }

        //for recaptcha popup after click on button - ("//button[contains(@class,'reload')] | //button[contains(@id,'reload')] ")
        var RecaptchaOpen_Iframe = ElementByXPath("//iframe[contains(@src,'recaptcha/api2/anchor')]");
        if (IsVisible(RecaptchaOpen_Iframe))
        {
            //SolveCaptcha if apper
            Log("DO Recaptcha");
            var result = base.DoSolveCaptcha();
            if (result > 0)
            {
                return Fail("Fail solving captcha");
            }
            RecaptchaUtility utility = new RecaptchaUtility(this);
            utility.DoSolve();
        }

        return 0;
    }//end Recaptcha_Function
     //=================//	




} //end class
